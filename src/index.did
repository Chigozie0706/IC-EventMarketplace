type Event = record {
  id : text;
  eventDescription : text;
  owner : principal;
  createdAt : nat64;
  updatedAt : opt nat64;
  eventTitle : text;
  eventLocation : text;
  attendees : vec text;
  eventCardImgUrl : text;
};
type EventPayload = record {
  eventDescription : text;
  eventTitle : text;
  eventLocation : text;
  eventCardImgUrl : text;
  eventDate : text;
};
type _AzleResult = variant { Ok : Event; Err : text };
type _AzleResult_1 = variant { Ok : vec Event; Err : text };
service : () -> {
  addEvent : (EventPayload) -> (_AzleResult);
  attendAnEvent : (text) -> (_AzleResult);
  deleteToDo : (text) -> (_AzleResult);
  getAllEvents : () -> (_AzleResult_1) query;
  getEventById : (text) -> (_AzleResult) query;
  updateEvent : (text, EventPayload) -> (_AzleResult);
}